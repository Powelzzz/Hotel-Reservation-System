//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotelReservationSystem.Appdata
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBSYSEntities : DbContext
    {
        public DBSYSEntities()
            : base("name=DBSYSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<GuestInformation> GuestInformation { get; set; }
        public virtual DbSet<PaymentInfo> PaymentInfo { get; set; }
        public virtual DbSet<ReservationInfo> ReservationInfo { get; set; }
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<RoomInformation> RoomInformation { get; set; }
        public virtual DbSet<StaffInfo> StaffInfo { get; set; }
        public virtual DbSet<UserAccount> UserAccount { get; set; }
        public virtual DbSet<vw_Guest_CheckInOutDates> vw_Guest_CheckInOutDates { get; set; }
        public virtual DbSet<vw_Guest_Full> vw_Guest_Full { get; set; }
        public virtual DbSet<vw_Guest_RoomOccupied> vw_Guest_RoomOccupied { get; set; }
        public virtual DbSet<vw_Payment_Amount> vw_Payment_Amount { get; set; }
        public virtual DbSet<vw_Payment_CardInfo> vw_Payment_CardInfo { get; set; }
        public virtual DbSet<vw_Payment_Full> vw_Payment_Full { get; set; }
        public virtual DbSet<vw_Payment_GuestInfo> vw_Payment_GuestInfo { get; set; }
        public virtual DbSet<vw_Payment_ReservationInfo> vw_Payment_ReservationInfo { get; set; }
        public virtual DbSet<vw_Payment_UserInfo> vw_Payment_UserInfo { get; set; }
        public virtual DbSet<vw_Reservation_CheckedIn> vw_Reservation_CheckedIn { get; set; }
        public virtual DbSet<vw_Reservation_CheckedOut> vw_Reservation_CheckedOut { get; set; }
        public virtual DbSet<vw_Reservation_CheckStatus> vw_Reservation_CheckStatus { get; set; }
        public virtual DbSet<vw_Reservation_Full> vw_Reservation_Full { get; set; }
        public virtual DbSet<vw_Reservation_GuestCount> vw_Reservation_GuestCount { get; set; }
        public virtual DbSet<vw_Reservation_GuestInfo> vw_Reservation_GuestInfo { get; set; }
        public virtual DbSet<vw_Reservation_RoomInfo> vw_Reservation_RoomInfo { get; set; }
        public virtual DbSet<vw_Reservation_Rooms> vw_Reservation_Rooms { get; set; }
        public virtual DbSet<vw_Reservation_UserInfo> vw_Reservation_UserInfo { get; set; }
        public virtual DbSet<vw_RoomInfo_Available> vw_RoomInfo_Available { get; set; }
        public virtual DbSet<vw_RoomInfo_Full> vw_RoomInfo_Full { get; set; }
        public virtual DbSet<vw_RoomInfo_Occupied> vw_RoomInfo_Occupied { get; set; }
        public virtual DbSet<vw_RoomInfo_Prices> vw_RoomInfo_Prices { get; set; }
        public virtual DbSet<vw_RoomInfo_Types> vw_RoomInfo_Types { get; set; }
        public virtual DbSet<vw_Staff_Full> vw_Staff_Full { get; set; }
        public virtual DbSet<vw_Staff_Personal> vw_Staff_Personal { get; set; }
        public virtual DbSet<vw_Staff_Salary> vw_Staff_Salary { get; set; }
        public virtual DbSet<vw_UserAccount_Active> vw_UserAccount_Active { get; set; }
        public virtual DbSet<vw_UserAccount_Full> vw_UserAccount_Full { get; set; }
        public virtual DbSet<vw_UserAccount_Inactive> vw_UserAccount_Inactive { get; set; }
        public virtual DbSet<vw_UserAccount_Roles> vw_UserAccount_Roles { get; set; }
        public virtual DbSet<vw_UserAccount_Updates> vw_UserAccount_Updates { get; set; }
    
        public virtual int SP_AddGuest_Booking(string fn, string ln, string gender, Nullable<System.DateTime> bdate, string contact, string address, string email, Nullable<int> uid, Nullable<int> rid)
        {
            var fnParameter = fn != null ?
                new ObjectParameter("fn", fn) :
                new ObjectParameter("fn", typeof(string));
    
            var lnParameter = ln != null ?
                new ObjectParameter("ln", ln) :
                new ObjectParameter("ln", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var bdateParameter = bdate.HasValue ?
                new ObjectParameter("bdate", bdate) :
                new ObjectParameter("bdate", typeof(System.DateTime));
    
            var contactParameter = contact != null ?
                new ObjectParameter("contact", contact) :
                new ObjectParameter("contact", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var ridParameter = rid.HasValue ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AddGuest_Booking", fnParameter, lnParameter, genderParameter, bdateParameter, contactParameter, addressParameter, emailParameter, uidParameter, ridParameter);
        }
    
        public virtual int SP_AddPayment_Booking(Nullable<int> uid, Nullable<int> resid, Nullable<int> gid, string type, string num, Nullable<decimal> amount, Nullable<int> cvv, Nullable<System.DateTime> expiry, string owner)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var residParameter = resid.HasValue ?
                new ObjectParameter("resid", resid) :
                new ObjectParameter("resid", typeof(int));
    
            var gidParameter = gid.HasValue ?
                new ObjectParameter("gid", gid) :
                new ObjectParameter("gid", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var numParameter = num != null ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var cvvParameter = cvv.HasValue ?
                new ObjectParameter("cvv", cvv) :
                new ObjectParameter("cvv", typeof(int));
    
            var expiryParameter = expiry.HasValue ?
                new ObjectParameter("expiry", expiry) :
                new ObjectParameter("expiry", typeof(System.DateTime));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("owner", owner) :
                new ObjectParameter("owner", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AddPayment_Booking", uidParameter, residParameter, gidParameter, typeParameter, numParameter, amountParameter, cvvParameter, expiryParameter, ownerParameter);
        }
    
        public virtual int SP_AddReservation(Nullable<System.DateTime> checkInDate, Nullable<System.DateTime> checkOutDate, Nullable<int> stayCount, Nullable<int> guestCount, Nullable<int> adultGuestCount, Nullable<int> childGuestCount, Nullable<int> uID, Nullable<int> gID, Nullable<int> rID)
        {
            var checkInDateParameter = checkInDate.HasValue ?
                new ObjectParameter("CheckInDate", checkInDate) :
                new ObjectParameter("CheckInDate", typeof(System.DateTime));
    
            var checkOutDateParameter = checkOutDate.HasValue ?
                new ObjectParameter("CheckOutDate", checkOutDate) :
                new ObjectParameter("CheckOutDate", typeof(System.DateTime));
    
            var stayCountParameter = stayCount.HasValue ?
                new ObjectParameter("StayCount", stayCount) :
                new ObjectParameter("StayCount", typeof(int));
    
            var guestCountParameter = guestCount.HasValue ?
                new ObjectParameter("GuestCount", guestCount) :
                new ObjectParameter("GuestCount", typeof(int));
    
            var adultGuestCountParameter = adultGuestCount.HasValue ?
                new ObjectParameter("AdultGuestCount", adultGuestCount) :
                new ObjectParameter("AdultGuestCount", typeof(int));
    
            var childGuestCountParameter = childGuestCount.HasValue ?
                new ObjectParameter("ChildGuestCount", childGuestCount) :
                new ObjectParameter("ChildGuestCount", typeof(int));
    
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var gIDParameter = gID.HasValue ?
                new ObjectParameter("GID", gID) :
                new ObjectParameter("GID", typeof(int));
    
            var rIDParameter = rID.HasValue ?
                new ObjectParameter("RID", rID) :
                new ObjectParameter("RID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AddReservation", checkInDateParameter, checkOutDateParameter, stayCountParameter, guestCountParameter, adultGuestCountParameter, childGuestCountParameter, uIDParameter, gIDParameter, rIDParameter);
        }
    
        public virtual int SP_AddReservation_Booking(Nullable<System.DateTime> checkin, Nullable<System.DateTime> checkout, Nullable<int> dayscount, Nullable<int> adults, Nullable<int> children, Nullable<int> totalguests, Nullable<int> uid, Nullable<int> rid, Nullable<int> gid)
        {
            var checkinParameter = checkin.HasValue ?
                new ObjectParameter("checkin", checkin) :
                new ObjectParameter("checkin", typeof(System.DateTime));
    
            var checkoutParameter = checkout.HasValue ?
                new ObjectParameter("checkout", checkout) :
                new ObjectParameter("checkout", typeof(System.DateTime));
    
            var dayscountParameter = dayscount.HasValue ?
                new ObjectParameter("dayscount", dayscount) :
                new ObjectParameter("dayscount", typeof(int));
    
            var adultsParameter = adults.HasValue ?
                new ObjectParameter("adults", adults) :
                new ObjectParameter("adults", typeof(int));
    
            var childrenParameter = children.HasValue ?
                new ObjectParameter("children", children) :
                new ObjectParameter("children", typeof(int));
    
            var totalguestsParameter = totalguests.HasValue ?
                new ObjectParameter("totalguests", totalguests) :
                new ObjectParameter("totalguests", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var ridParameter = rid.HasValue ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(int));
    
            var gidParameter = gid.HasValue ?
                new ObjectParameter("gid", gid) :
                new ObjectParameter("gid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AddReservation_Booking", checkinParameter, checkoutParameter, dayscountParameter, adultsParameter, childrenParameter, totalguestsParameter, uidParameter, ridParameter, gidParameter);
        }
    
        public virtual int SP_AddRoom(string title, string type, Nullable<decimal> price, string desc, string img)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("Img", img) :
                new ObjectParameter("Img", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AddRoom", titleParameter, typeParameter, priceParameter, descParameter, imgParameter);
        }
    
        public virtual int SP_DeleteGuest(Nullable<int> guestID)
        {
            var guestIDParameter = guestID.HasValue ?
                new ObjectParameter("GuestID", guestID) :
                new ObjectParameter("GuestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteGuest", guestIDParameter);
        }
    
        public virtual int SP_DeleteRoom(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteRoom", iDParameter);
        }
    
        public virtual int SP_DeleteUserAccount(Nullable<int> specificID)
        {
            var specificIDParameter = specificID.HasValue ?
                new ObjectParameter("SpecificID", specificID) :
                new ObjectParameter("SpecificID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteUserAccount", specificIDParameter);
        }
    
        public virtual int SP_NewUserAccount(string uName, string uPassword, Nullable<System.DateTime> createDate, Nullable<System.DateTime> updateDate, Nullable<int> roleID, Nullable<int> createdByID, string creatorName)
        {
            var uNameParameter = uName != null ?
                new ObjectParameter("UName", uName) :
                new ObjectParameter("UName", typeof(string));
    
            var uPasswordParameter = uPassword != null ?
                new ObjectParameter("UPassword", uPassword) :
                new ObjectParameter("UPassword", typeof(string));
    
            var createDateParameter = createDate.HasValue ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(System.DateTime));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var createdByIDParameter = createdByID.HasValue ?
                new ObjectParameter("CreatedByID", createdByID) :
                new ObjectParameter("CreatedByID", typeof(int));
    
            var creatorNameParameter = creatorName != null ?
                new ObjectParameter("CreatorName", creatorName) :
                new ObjectParameter("CreatorName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_NewUserAccount", uNameParameter, uPasswordParameter, createDateParameter, updateDateParameter, roleIDParameter, createdByIDParameter, creatorNameParameter);
        }
    
        public virtual ObjectResult<SP_SearchGuest_Name_Result> SP_SearchGuest_Name(string gName)
        {
            var gNameParameter = gName != null ?
                new ObjectParameter("GName", gName) :
                new ObjectParameter("GName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SearchGuest_Name_Result>("SP_SearchGuest_Name", gNameParameter);
        }
    
        public virtual ObjectResult<SP_SearchReservation_GuestLastName_Result> SP_SearchReservation_GuestLastName(string guestSurname)
        {
            var guestSurnameParameter = guestSurname != null ?
                new ObjectParameter("GuestSurname", guestSurname) :
                new ObjectParameter("GuestSurname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SearchReservation_GuestLastName_Result>("SP_SearchReservation_GuestLastName", guestSurnameParameter);
        }
    
        public virtual ObjectResult<SP_SearchReservation_RoomOccupied_Result> SP_SearchReservation_RoomOccupied(string roomTitle)
        {
            var roomTitleParameter = roomTitle != null ?
                new ObjectParameter("RoomTitle", roomTitle) :
                new ObjectParameter("RoomTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SearchReservation_RoomOccupied_Result>("SP_SearchReservation_RoomOccupied", roomTitleParameter);
        }
    
        public virtual ObjectResult<SP_SearchReservation_Username_Result> SP_SearchReservation_Username(string uName)
        {
            var uNameParameter = uName != null ?
                new ObjectParameter("UName", uName) :
                new ObjectParameter("UName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SearchReservation_Username_Result>("SP_SearchReservation_Username", uNameParameter);
        }
    
        public virtual ObjectResult<SP_SearchRoom_RoomTitle_Result> SP_SearchRoom_RoomTitle(string roomTitle)
        {
            var roomTitleParameter = roomTitle != null ?
                new ObjectParameter("RoomTitle", roomTitle) :
                new ObjectParameter("RoomTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SearchRoom_RoomTitle_Result>("SP_SearchRoom_RoomTitle", roomTitleParameter);
        }
    
        public virtual ObjectResult<SP_SearchUA_Username_Result> SP_SearchUA_Username(string uName)
        {
            var uNameParameter = uName != null ?
                new ObjectParameter("UName", uName) :
                new ObjectParameter("UName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SearchUA_Username_Result>("SP_SearchUA_Username", uNameParameter);
        }
    
        public virtual int SP_UpdateGuest(Nullable<int> guestID, string fName, string lName, string gender, Nullable<System.DateTime> bDate, string contact, string address, string email)
        {
            var guestIDParameter = guestID.HasValue ?
                new ObjectParameter("GuestID", guestID) :
                new ObjectParameter("GuestID", typeof(int));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var bDateParameter = bDate.HasValue ?
                new ObjectParameter("BDate", bDate) :
                new ObjectParameter("BDate", typeof(System.DateTime));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateGuest", guestIDParameter, fNameParameter, lNameParameter, genderParameter, bDateParameter, contactParameter, addressParameter, emailParameter);
        }
    
        public virtual int SP_UpdateGuest_CheckInDate(Nullable<int> gID, Nullable<System.DateTime> checkInDate)
        {
            var gIDParameter = gID.HasValue ?
                new ObjectParameter("GID", gID) :
                new ObjectParameter("GID", typeof(int));
    
            var checkInDateParameter = checkInDate.HasValue ?
                new ObjectParameter("CheckInDate", checkInDate) :
                new ObjectParameter("CheckInDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateGuest_CheckInDate", gIDParameter, checkInDateParameter);
        }
    
        public virtual int SP_UpdateGuest_CheckOutDate(Nullable<int> gID, Nullable<System.DateTime> checkOutDate)
        {
            var gIDParameter = gID.HasValue ?
                new ObjectParameter("GID", gID) :
                new ObjectParameter("GID", typeof(int));
    
            var checkOutDateParameter = checkOutDate.HasValue ?
                new ObjectParameter("CheckOutDate", checkOutDate) :
                new ObjectParameter("CheckOutDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateGuest_CheckOutDate", gIDParameter, checkOutDateParameter);
        }
    
        public virtual int SP_UpdateReservation_CheckInGuest(Nullable<int> resID, Nullable<System.DateTime> checkInDate)
        {
            var resIDParameter = resID.HasValue ?
                new ObjectParameter("ResID", resID) :
                new ObjectParameter("ResID", typeof(int));
    
            var checkInDateParameter = checkInDate.HasValue ?
                new ObjectParameter("CheckInDate", checkInDate) :
                new ObjectParameter("CheckInDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateReservation_CheckInGuest", resIDParameter, checkInDateParameter);
        }
    
        public virtual int SP_UpdateReservation_CheckOutGuest(Nullable<int> resID, Nullable<System.DateTime> checkOutDate)
        {
            var resIDParameter = resID.HasValue ?
                new ObjectParameter("ResID", resID) :
                new ObjectParameter("ResID", typeof(int));
    
            var checkOutDateParameter = checkOutDate.HasValue ?
                new ObjectParameter("CheckOutDate", checkOutDate) :
                new ObjectParameter("CheckOutDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateReservation_CheckOutGuest", resIDParameter, checkOutDateParameter);
        }
    
        public virtual int SP_UpdateRoom(Nullable<int> iD, string title, string type, Nullable<decimal> price, string desc, string img)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("Img", img) :
                new ObjectParameter("Img", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateRoom", iDParameter, titleParameter, typeParameter, priceParameter, descParameter, imgParameter);
        }
    
        public virtual int SP_UpdateRoom_EmptyRoom(Nullable<int> rID)
        {
            var rIDParameter = rID.HasValue ?
                new ObjectParameter("RID", rID) :
                new ObjectParameter("RID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateRoom_EmptyRoom", rIDParameter);
        }
    
        public virtual int SP_UpdateRoom_GuestCount(Nullable<int> iD, Nullable<int> count)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateRoom_GuestCount", iDParameter, countParameter);
        }
    
        public virtual int SP_UpdateRoom_GuestID(Nullable<int> rID, Nullable<int> gID)
        {
            var rIDParameter = rID.HasValue ?
                new ObjectParameter("RID", rID) :
                new ObjectParameter("RID", typeof(int));
    
            var gIDParameter = gID.HasValue ?
                new ObjectParameter("GID", gID) :
                new ObjectParameter("GID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateRoom_GuestID", rIDParameter, gIDParameter);
        }
    
        public virtual int SP_UpdateRoom_NoImage(Nullable<int> iD, string title, string type, Nullable<decimal> price, string desc)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateRoom_NoImage", iDParameter, titleParameter, typeParameter, priceParameter, descParameter);
        }
    
        public virtual int SP_UpdateUserAccount(Nullable<int> specificID, string uName, string uPassword, string uStatus, Nullable<System.DateTime> uLastUpdated)
        {
            var specificIDParameter = specificID.HasValue ?
                new ObjectParameter("SpecificID", specificID) :
                new ObjectParameter("SpecificID", typeof(int));
    
            var uNameParameter = uName != null ?
                new ObjectParameter("UName", uName) :
                new ObjectParameter("UName", typeof(string));
    
            var uPasswordParameter = uPassword != null ?
                new ObjectParameter("UPassword", uPassword) :
                new ObjectParameter("UPassword", typeof(string));
    
            var uStatusParameter = uStatus != null ?
                new ObjectParameter("UStatus", uStatus) :
                new ObjectParameter("UStatus", typeof(string));
    
            var uLastUpdatedParameter = uLastUpdated.HasValue ?
                new ObjectParameter("ULastUpdated", uLastUpdated) :
                new ObjectParameter("ULastUpdated", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateUserAccount", specificIDParameter, uNameParameter, uPasswordParameter, uStatusParameter, uLastUpdatedParameter);
        }
    
        public virtual int SP_UpdateUserAccountStatus(string uName, string uStatus)
        {
            var uNameParameter = uName != null ?
                new ObjectParameter("UName", uName) :
                new ObjectParameter("UName", typeof(string));
    
            var uStatusParameter = uStatus != null ?
                new ObjectParameter("UStatus", uStatus) :
                new ObjectParameter("UStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateUserAccountStatus", uNameParameter, uStatusParameter);
        }
    
        public virtual int SP_NewStaff_Register(string fn, string ln, string gender, Nullable<System.DateTime> bdate, string contact, string email, Nullable<decimal> salary, string status, Nullable<int> roleid, Nullable<int> uid)
        {
            var fnParameter = fn != null ?
                new ObjectParameter("fn", fn) :
                new ObjectParameter("fn", typeof(string));
    
            var lnParameter = ln != null ?
                new ObjectParameter("ln", ln) :
                new ObjectParameter("ln", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var bdateParameter = bdate.HasValue ?
                new ObjectParameter("bdate", bdate) :
                new ObjectParameter("bdate", typeof(System.DateTime));
    
            var contactParameter = contact != null ?
                new ObjectParameter("contact", contact) :
                new ObjectParameter("contact", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(decimal));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("roleid", roleid) :
                new ObjectParameter("roleid", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_NewStaff_Register", fnParameter, lnParameter, genderParameter, bdateParameter, contactParameter, emailParameter, salaryParameter, statusParameter, roleidParameter, uidParameter);
        }
    
        public virtual int SP_NewUserAccount_Register(string username, string password, string status, Nullable<System.DateTime> timecreated, Nullable<System.DateTime> timeupdated, Nullable<int> roleid, Nullable<int> creatorid, string creatorname)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var timecreatedParameter = timecreated.HasValue ?
                new ObjectParameter("timecreated", timecreated) :
                new ObjectParameter("timecreated", typeof(System.DateTime));
    
            var timeupdatedParameter = timeupdated.HasValue ?
                new ObjectParameter("timeupdated", timeupdated) :
                new ObjectParameter("timeupdated", typeof(System.DateTime));
    
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("roleid", roleid) :
                new ObjectParameter("roleid", typeof(int));
    
            var creatoridParameter = creatorid.HasValue ?
                new ObjectParameter("creatorid", creatorid) :
                new ObjectParameter("creatorid", typeof(int));
    
            var creatornameParameter = creatorname != null ?
                new ObjectParameter("creatorname", creatorname) :
                new ObjectParameter("creatorname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_NewUserAccount_Register", usernameParameter, passwordParameter, statusParameter, timecreatedParameter, timeupdatedParameter, roleidParameter, creatoridParameter, creatornameParameter);
        }
    }
}
